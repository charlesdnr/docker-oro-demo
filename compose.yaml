services:
  application:
    image: $ORO_IMAGE:$ORO_IMAGE_TAG
    command: -- true
    env_file: .env
    depends_on:
      web:
        condition: service_started
      consumer:
        condition: service_started
      cron:
        condition: service_started

  web:
    image: $ORO_IMAGE:$ORO_IMAGE_TAG
    command: nginx
    env_file: .env
    restart: unless-stopped
    ports:
      - target: 8080
        published: 80
        mode: host
    depends_on:
      init:
        condition: service_completed_successfully
      php-fpm-app:
        condition: service_healthy
      ws:
        condition: service_started
    networks:
      default:
        aliases:
          - ${ORO_APP_DOMAIN}
    volumes:
      - cache:/var/www/oro/var/cache:ro
      - public:/var/www/oro/public
      - public_storage:/var/www/oro/public/media:ro
      - private_storage:/var/www/oro/var/data:ro
      - etc_nginx:/etc/nginx

volumes:
  cache: {}
  public_storage: {}
  private_storage: {}
  etc_nginx: {}
  run_php_fpm: {}
  public: {}

include:
  - ./docker-compose/docker-compose.db.yml
  - ./docker-compose/docker-compose.mail.yml
  - ./docker-compose/docker-compose.php-fpm.yml
  - ./docker-compose/docker-compose.ws.yml
  - ./docker-compose/docker-compose.consumer.yml
  - ./docker-compose/docker-compose.cron.yml
  - ./docker-compose/docker-compose.install.yml
  - ./docker-compose/docker-compose.init.yml
  - ./docker-compose/docker-compose.restore.yml